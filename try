<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>مشغل فيديو متقدم مع تأثيرات بصرية</title>
    <style>
        :root {
            --glass-bg: rgba(255, 255, 255, 0.15);
            --glass-border: rgba(255, 255, 255, 0.3);
            --border-radius: 32px;
            --primary-color: #0ea5e9;
            --accent-color: #3b82f6;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "SF Pro Display", sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            position: relative;
            overflow: hidden;
        }

        /* الخلفية المتفاعلة مع الفيديو */
        .dynamic-background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            transition: all 2s ease;
            filter: blur(120px) saturate(1.5);
            opacity: 0.6;
        }

        .video-container {
            width: 100%;
            max-width: 1000px;
            position: relative;
            border-radius: var(--border-radius);
            background: rgba(255, 255, 255, 0.08);
            backdrop-filter: blur(40px) saturate(1.8);
            -webkit-backdrop-filter: blur(40px) saturate(1.8);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 
                0 25px 80px rgba(0, 0, 0, 0.3),
                0 0 0 1px rgba(255, 255, 255, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.2);
            overflow: hidden;
        }

        #video {
            width: 100%;
            height: auto;
            display: block;
            border-radius: calc(var(--border-radius) - 1px);
        }

        /* شريط التحكم المتقدم */
        .custom-controls {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(30px) saturate(1.5);
            -webkit-backdrop-filter: blur(30px) saturate(1.5);
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            padding: 20px 30px 25px;
            transform: translateY(100%);
            transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
            border-radius: 0 0 calc(var(--border-radius) - 1px) calc(var(--border-radius) - 1px);
        }

        .video-container:hover .custom-controls {
            transform: translateY(0);
        }

        /* Timeline محسن ودائري */
        .timeline-container {
            margin-bottom: 20px;
            position: relative;
        }

        .timeline {
            width: 100%;
            height: 8px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            cursor: pointer;
            position: relative;
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .timeline:hover {
            height: 12px;
            background: rgba(255, 255, 255, 0.25);
        }

        .timeline-progress {
            height: 100%;
            background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
            border-radius: 20px;
            width: 0%;
            transition: width 0.1s ease;
            position: relative;
            box-shadow: 0 0 20px rgba(59, 130, 246, 0.4);
        }

        .timeline-progress::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, rgba(255,255,255,0.3), transparent);
            border-radius: inherit;
        }

        /* نقطة التحكم الدائرية */
        .timeline-thumb {
            position: absolute;
            top: 50%;
            right: -8px;
            width: 16px;
            height: 16px;
            background: #fff;
            border-radius: 50%;
            transform: translateY(-50%) scale(0);
            transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            box-shadow: 
                0 4px 15px rgba(0, 0, 0, 0.3),
                0 0 0 3px rgba(59, 130, 246, 0.3);
            cursor: grab;
        }

        .timeline:hover .timeline-thumb {
            transform: translateY(-50%) scale(1);
        }

        .timeline-thumb:active {
            cursor: grabbing;
            transform: translateY(-50%) scale(1.2);
        }

        /* مؤشر الوقت المحسن */
        .time-tooltip {
            position: absolute;
            bottom: 25px;
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(10px);
            color: white;
            padding: 6px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 500;
            transform: translateX(-50%) translateY(10px);
            opacity: 0;
            transition: all 0.3s ease;
            pointer-events: none;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .timeline:hover .time-tooltip {
            opacity: 1;
            transform: translateX(-50%) translateY(0);
        }

        /* أزرار التحكم المحسنة */
        .controls-row {
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 20px;
        }

        .controls-left, .controls-right {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .control-btn {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.15);
            border-radius: 12px;
            color: white;
            cursor: pointer;
            padding: 10px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .control-btn:hover {
            background: rgba(255, 255, 255, 0.2);
            border-color: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
        }

        .control-btn:active {
            transform: translateY(0);
        }

        .play-btn {
            padding: 12px 14px;
        }

        .control-btn svg {
            width: 18px;
            height: 18px;
            fill: currentColor;
        }

        .play-btn svg {
            width: 20px;
            height: 20px;
        }

        /* عرض الوقت المحسن */
        .time-display {
            background: rgba(255, 255, 255, 0.08);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 16px;
            padding: 8px 16px;
            color: rgba(255, 255, 255, 0.9);
            font-size: 14px;
            font-weight: 500;
            min-width: 100px;
            text-align: center;
            font-variant-numeric: tabular-nums;
        }

        /* التحكم في الصوت المحسن */
        .volume-container {
            display: flex;
            align-items: center;
            gap: 12px;
            background: rgba(255, 255, 255, 0.08);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 16px;
            padding: 8px 12px;
        }

        .volume-slider {
            width: 80px;
            height: 4px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            outline: none;
            cursor: pointer;
            -webkit-appearance: none;
        }

        .volume-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 12px;
            height: 12px;
            background: white;
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
        }

        /* حالات التشغيل */
        .playing .play-icon { display: none; }
        .playing .pause-icon { display: block; }
        .paused .play-icon { display: block; }
        .paused .pause-icon { display: none; }

        /* تأثيرات الانيميشن */
        @keyframes pulse {
            0%, 100% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4); }
            50% { box-shadow: 0 0 0 10px rgba(59, 130, 246, 0); }
        }

        .playing .timeline-progress {
            animation: pulse 2s infinite;
        }

        /* Canvas مخفي لاستخراج الألوان */
        #colorCanvas {
            display: none;
        }

        /* تحسينات للأجهزة المحمولة */
        @media (max-width: 768px) {
            .controls-row {
                gap: 12px;
            }
            .controls-left, .controls-right {
                gap: 8px;
            }
            .time-display {
                min-width: 80px;
                font-size: 12px;
            }
            .volume-slider {
                width: 60px;
            }
        }
    </style>
</head>
<body>
    <!-- الخلفية المتفاعلة -->
    <div class="dynamic-background" id="dynamicBg"></div>

    <!-- Canvas مخفي لاستخراج الألوان -->
    <canvas id="colorCanvas" width="320" height="240"></canvas>

    <div class="video-container">
        <video id="video" src="https://archive.org/download/20250916_20250916_0112/%D9%84%D8%BA%D8%A9_%D8%A7%D9%84%D8%A3%D8%B9%D9%85%D8%A7%D9%84__%D9%85%D9%82%D8%AF%D9%85%D8%A9_%D9%84%D9%84%D9%85%D8%AD%D8%A7%D8%B3%D8%A8%D8%A9.mp4"></video>

        <div class="custom-controls">
            <!-- Timeline محسن -->
            <div class="timeline-container">
                <div class="timeline" id="timeline">
                    <div class="timeline-progress" id="progress">
                        <div class="timeline-thumb"></div>
                    </div>
                    <div class="time-tooltip" id="timeTooltip">0:00</div>
                </div>
            </div>

            <!-- أزرار التحكم -->
            <div class="controls-row">
                <div class="controls-left">
                    <!-- السابق -->
                    <button class="control-btn" id="prevBtn">
                        <svg viewBox="0 0 24 24">
                            <path d="M6 6h2v12H6zm3.5 6l8.5 6V6z"/>
                        </svg>
                    </button>

                    <!-- تشغيل/إيقاف -->
                    <button class="control-btn play-btn paused" id="playBtn">
                        <svg class="play-icon" viewBox="0 0 24 24">
                            <path d="M8 5v14l11-7z"/>
                        </svg>
                        <svg class="pause-icon" viewBox="0 0 24 24" style="display: none;">
                            <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/>
                        </svg>
                    </button>

                    <!-- التالي -->
                    <button class="control-btn" id="nextBtn">
                        <svg viewBox="0 0 24 24">
                            <path d="M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z"/>
                        </svg>
                    </button>
                </div>

                <!-- عرض الوقت -->
                <div class="time-display" id="timeDisplay">0:00 / 0:00</div>

                <div class="controls-right">
                    <!-- التحكم في الصوت -->
                    <div class="volume-container">
                        <button class="control-btn" id="volumeBtn" style="background: transparent; border: none; padding: 4px;">
                            <svg class="volume-on" viewBox="0 0 24 24">
                                <path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3A4.5 4.5 0 0014 7.97v8.05c1.48-.73 2.5-2.25 2.5-4.02z"/>
                            </svg>
                            <svg class="volume-off" viewBox="0 0 24 24" style="display: none;">
                                <path d="M16.5 12A4.5 4.5 0 0014 7.97v2.21l2.45 2.45c.03-.2.05-.41.05-.63zM3 9v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"/>
                            </svg>
                        </button>
                        <input type="range" class="volume-slider" id="volumeSlider" min="0" max="100" value="100">
                    </div>

                    <!-- شاشة كاملة -->
                    <button class="control-btn" id="fullscreenBtn">
                        <svg viewBox="0 0 24 24">
                            <path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        const video = document.getElementById('video');
        const playBtn = document.getElementById('playBtn');
        const timeline = document.getElementById('timeline');
        const progress = document.getElementById('progress');
        const timeDisplay = document.getElementById('timeDisplay');
        const timeTooltip = document.getElementById('timeTooltip');
        const volumeBtn = document.getElementById('volumeBtn');
        const volumeSlider = document.getElementById('volumeSlider');
        const fullscreenBtn = document.getElementById('fullscreenBtn');
        const dynamicBg = document.getElementById('dynamicBg');
        const colorCanvas = document.getElementById('colorCanvas');
        const ctx = colorCanvas.getContext('2d');

        let isDragging = false;

        // وظيفة استخراج الألوان من الفيديو
        function extractColors() {
            if (video.videoWidth === 0 || video.videoHeight === 0) return;
            
            ctx.drawImage(video, 0, 0, 320, 240);
            const imageData = ctx.getImageData(0, 0, 320, 240);
            const data = imageData.data;
            
            let r = 0, g = 0, b = 0;
            const sampleSize = 4000; // عينة من البكسلات
            
            for (let i = 0; i < sampleSize; i += 4) {
                r += data[i];
                g += data[i + 1];
                b += data[i + 2];
            }
            
            r = Math.floor(r / (sampleSize / 4));
            g = Math.floor(g / (sampleSize / 4));
            b = Math.floor(b / (sampleSize / 4));
            
            // تطبيق الألوان على الخلفية
            const gradient = `radial-gradient(circle at 30% 70%, rgba(${r}, ${g}, ${b}, 0.6), rgba(${Math.floor(r*0.7)}, ${Math.floor(g*0.8)}, ${Math.floor(b*1.2)}, 0.4))`;
            dynamicBg.style.background = gradient;
        }

        // تشغيل/إيقاف
        playBtn.addEventListener('click', () => {
            if (video.paused) {
                video.play();
                playBtn.classList.remove('paused');
                playBtn.classList.add('playing');
            } else {
                video.pause();
                playBtn.classList.remove('playing');
                playBtn.classList.add('paused');
            }
        });

        // تحديث التقدم والألوان
        video.addEventListener('timeupdate', () => {
            if (!isDragging) {
                const progressPercent = (video.currentTime / video.duration) * 100;
                progress.style.width = progressPercent + '%';
            }
            
            const current = formatTime(video.currentTime);
            const duration = formatTime(video.duration);
            timeDisplay.textContent = `${current} / ${duration}`;
            
            // استخراج الألوان كل ثانيتين
            if (Math.floor(video.currentTime) % 2 === 0) {
                extractColors();
            }
        });

        // التحكم في Timeline
        timeline.addEventListener('mousedown', startDrag);
        document.addEventListener('mousemove', drag);
        document.addEventListener('mouseup', stopDrag);

        function startDrag(e) {
            isDragging = true;
            updateProgress(e);
        }

        function drag(e) {
            if (isDragging) {
                updateProgress(e);
            }
            
            // تحديث tooltip
            const rect = timeline.getBoundingClientRect();
            const percent = (e.clientX - rect.left) / rect.width;
            const time = percent * video.duration;
            timeTooltip.textContent = formatTime(time);
            timeTooltip.style.left = (e.clientX - rect.left) + 'px';
        }

        function stopDrag() {
            isDragging = false;
        }

        function updateProgress(e) {
            const rect = timeline.getBoundingClientRect();
            const percent = Math.max(0, Math.min(1, (e.clientX - rect.left) / rect.width));
            video.currentTime = percent * video.duration;
            progress.style.width = (percent * 100) + '%';
        }

        // التحكم في الصوت
        volumeBtn.addEventListener('click', () => {
            video.muted = !video.muted;
            updateVolumeIcon();
        });

        volumeSlider.addEventListener('input', () => {
            video.volume = volumeSlider.value / 100;
            video.muted = false;
            updateVolumeIcon();
        });

        function updateVolumeIcon() {
            const volumeOn = volumeBtn.querySelector('.volume-on');
            const volumeOff = volumeBtn.querySelector('.volume-off');
            
            if (video.muted || video.volume === 0) {
                volumeOn.style.display = 'none';
                volumeOff.style.display = 'block';
            } else {
                volumeOn.style.display = 'block';
                volumeOff.style.display = 'none';
            }
        }

        // شاشة كاملة
        fullscreenBtn.addEventListener('click', () => {
            if (document.fullscreenElement) {
                document.exitFullscreen();
            } else {
                video.parentElement.requestFullscreen();
            }
        });

        // تنسيق الوقت
        function formatTime(seconds) {
            if (isNaN(seconds)) return '0:00';
            const mins = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${mins}:${secs.toString().padStart(2, '0')}`;
        }

        // اختصارات الكيبورد
        document.addEventListener('keydown', (e) => {
            switch(e.key) {
                case ' ':
                    e.preventDefault();
                    playBtn.click();
                    break;
                case 'ArrowRight':
                    video.currentTime += 10;
                    break;
                case 'ArrowLeft':
                    video.currentTime -= 10;
                    break;
                case 'ArrowUp':
                    e.preventDefault();
                    video.volume = Math.min(1, video.volume + 0.1);
                    volumeSlider.value = video.volume * 100;
                    break;
                case 'ArrowDown':
                    e.preventDefault();
                    video.volume = Math.max(0, video.volume - 0.1);
                    volumeSlider.value = video.volume * 100;
                    break;
            }
        });

        // بدء استخراج الألوان عند تحميل الفيديو
        video.addEventListener('loadeddata', () => {
            setTimeout(extractColors, 500);
        });

    </script>
</body>
</html>
